{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "airbnb",
    "airbnb/hooks",
    "plugin:prettier/recommended",
    "plugin:import/typescript"
  ],
  "overrides": [
    {
      "files": [
        "*.ts",
        "*.tsx"
      ],
      "rules": {
        "no-undef": "off"
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "import",
    "prettier"
  ],
  "rules": {
    "prettier/prettier": "error",

    "no-shadow": "off",
    "no-use-before-define": "off",
    "no-unused-vars": "off",
    "no-unused-expressions": [
      "error",
      {
        "allowTernary": true,
        "allowShortCircuit": true
      }
    ],
    "no-return-await": "off",
    "no-else-return": "off",
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "no-nested-ternary": "off",
    "no-plusplus": "off",
    "no-restricted-syntax": [
      "error",
      "LabeledStatement",
      "WithStatement"
    ],
    "no-bitwise": "off",
    "no-param-reassign": "off",
    "no-namespace": "off",
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-unsafe-finally": "off",
    "no-continue": "off",
    "curly": [
      "warn",
      "all"
    ],
    "default-param-last": "off",
    "prefer-const": [
      "error",
      {
        "destructuring": "all"
      }
    ],
    "func-names": "off",
    "radix": "off",
    "guard-for-in": "off",
    "camelcase": "off",
    "consistent-return": "off",

    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "varsIgnorePattern": "React",
        "args": "none",
        "ignoreRestSiblings": true
      }
    ],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-unnecessary-type-constraint": "off",
   "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "UPPER_CASE",
          "PascalCase"
        ]
      },
      {
        "selector": [
          "enumMember",
          "enum",
          "function"
        ],
        "format": [
          "camelCase",
          "PascalCase"
        ]
      },
      {
        "selector": "typeAlias",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": [
          "typeProperty",
          "parameter"
        ],
        "format": [
          "camelCase",
          "snake_case",
          "PascalCase"
        ]
      }
    ],

    "react/require-default-props": "off",
    "react/state-in-constructor": "off",
    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [
          ".tsx"
        ]
      }
    ],
    "react/react-in-jsx-scope": "off",
    "react/jsx-uses-react": "off",
    "react/prop-types": "off",
    "react/no-danger": "off",
    "react/no-unstable-nested-components": [
      "warn",
      {
        "allowAsProps": true
      }
    ],
    "react/no-this-in-sfc": "off",
    "react/no-unescaped-entities": [
      "error",
      {
        "forbid": [
          {
            "char": ">",
            "alternatives": [
              "&gt;"
            ]
          },
          {
            "char": "}",
            "alternatives": [
              "&#125;"
            ]
          }
        ]
      }
    ],
    "react/no-unused-state": "off",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": [
          "function-declaration",
          "arrow-function"
        ],
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/jsx-props-no-spreading": "off",
    "react/jsx-no-useless-fragment": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "react/no-array-index-key": "warn",

    "react-hooks/exhaustive-deps": "warn",

    "import/no-unresolved": "error",
    "import/no-mutable-exports": "off",
    "import/extensions": "off",
    "import/prefer-default-export": "off",
    "import/no-named-as-default-member": "off",
    "import/no-import-module-exports": "off",
    "import/no-relative-packages": "off",

    "jsx-a11y/label-has-associated-control": "off",

    // TODO подключить позже
    "import/no-cycle": "off",
    "import/no-extraneous-dependencies": "off",
    "react/no-unused-prop-types": "off",
    // warn
    "@typescript-eslint/no-shadow": "off",
    // warn
    "@typescript-eslint/no-use-before-define": "off",
    "no-await-in-loop": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "no-promise-executor-return": "off"
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".d.ts"],
        "paths": ["src"] // Add your source directory here
      },
      "typescript": {
        "alwaysTryTypes": true
      },
      "alias": {
        "map": [
          ["@store", "./src/store"],
          ["@enums", "./src/enums"] // Замените путем к вашему местоположению store
        ],
        "extensions": [".ts", ".tsx", ".js", ".jsx"]
      }
    }
  }
}
